# OMEGA Website - Nginx Configuration
# Optimized for performance and security

server {
    listen 80;
    listen [::]:80;
    server_name omega-lang.org www.omega-lang.org;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name omega-lang.org www.omega-lang.org;
    
    # Document root
    root /var/www/omega-website;
    index index.html;
    
    # SSL Configuration (adjust paths as needed)
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.googleapis.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https:; frame-ancestors 'self';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Remove server signature
    server_tokens off;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli Compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/xhtml+xml
        application/xml
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Static file caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
    }
    
    location ~* \.(css|js)$ {
        expires 1M;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        access_log off;
    }
    
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        access_log off;
    }
    
    # Service Worker - no cache
    location = /sw.js {
        expires off;
        add_header Cache-Control "public, max-age=0, must-revalidate";
    }
    
    # Manifest
    location = /manifest.json {
        expires 1w;
        add_header Cache-Control "public";
    }
    
    # HTML files
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Main location block
    location / {
        try_files $uri $uri/ @fallback;
        
        # Add security headers for all responses
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # Fallback for SPA routing
    location @fallback {
        rewrite ^.*$ /index.html last;
    }
    
    # API routes (if needed)
    location /api/ {
        # Proxy to API server
        # proxy_pass http://api_backend;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        
        # For now, return 404
        return 404;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(md|log|env|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(package|composer|yarn)\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots and sitemap
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    location = /sitemap.xml {
        access_log off;
        log_not_found off;
    }
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /404.html;
    
    # Logging
    access_log /var/log/nginx/omega-website-access.log;
    error_log /var/log/nginx/omega-website-error.log;
    
    # Rate limiting (optional)
    # limit_req_zone $binary_remote_addr zone=omega:10m rate=10r/s;
    # limit_req zone=omega burst=20 nodelay;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Buffer settings
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
}